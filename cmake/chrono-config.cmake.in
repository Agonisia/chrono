@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/ChronoEngineTargets.cmake")

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

## Handle Irrlicht dependency
if(@ENABLE_MODULE_IRRLICHT@)
  if(NOT IRRLICHT_DIR)
    set(IRRLICHT_DIR "@IRRLICHT_DIR@")
  endif(NOT IRRLICHT_DIR)
  find_package(Irrlicht MODULE)
  list(APPEND CHRONO_AVAILABLE_MODULES Irrlicht)
endif(@ENABLE_MODULE_IRRLICHT@)


foreach(_comp ${Chrono_FIND_COMPONENTS})
  if (NOT _comp IN_LIST CHRONO_AVAILABLE_MODULES)
    set(ChronoEngine_FOUND False)
    set(ChronoEngine_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  set(INCLUDE_TARGETS_TEMP "${CMAKE_CURRENT_LIST_DIR}/ChronoEngine${_comp}Targets.cmake")
  message(STATUS "Including targets from: ${INCLUDE_TARGETS_TEMP}")
  include("${INCLUDE_TARGETS_TEMP}")
endforeach()


include(CMakeFindDependencyMacro)

## Handle OpenMP dependency
if(@ENABLE_OPENMP@)
  find_dependency(OpenMP)
endif(@ENABLE_OPENMP@)

## Handle Eigen3 dependency
# try finding Eigen3
if(NOT EIGEN3_INCLUDE_DIR AND NOT Eigen3_ROOT)
  set(Eigen3_ROOT "@EIGEN3_INCLUDE_DIR@")
endif(NOT EIGEN3_INCLUDE_DIR AND NOT Eigen3_ROOT)

if(NOT Eigen3_DIR)
  set(Eigen3_DIR "@Eigen3_DIR@")
endif(NOT Eigen3_DIR)

find_dependency(Eigen3)

message(STATUS "EIGEN3_FOUND: ${EIGEN3_FOUND}")
message(STATUS "EIGEN3_INCLUDE_DIR: ${EIGEN3_INCLUDE_DIR}")

if(EIGEN3_FOUND)
  mark_as_advanced(FORCE EIGEN3_INCLUDE_DIR)
  mark_as_advanced(FORCE Eigen3_DIR)
  mark_as_advanced(FORCE Eigen3_ROOT)
endif(EIGEN3_FOUND)

## Handle Thrust dependency
if(@THRUST_FOUND@)
    ## Handle Thrust dependency
    find_dependency(Thrust)

    message(STATUS "THRUST_INCLUDE_DIR: ${THRUST_INCLUDE_DIR}")
endif(@THRUST_FOUND@)


check_required_components(ChronoEngine)
